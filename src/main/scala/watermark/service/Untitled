'use strict';

const request = require('request');


const docs = [
  'book\tCosmos\tCarl Sagan\tScience',
  'journal\tThe Journal of cell biology\tRockefeller University Press',
  'book\tA brief history of time\tStephen W Hawking\tScience',
  'book\tCosmos\tCarl Sagan\tScience',
  'journal\tThe Journal of cell biology\tRockefeller University Press',
  'book\tA brief history of time\tStephen W Hawking\tScience',
  'book\tCosmos\tCarl Sagan\tScience',
  'journal\tThe Journal of cell biology\tRockefeller University Press',
  'book\tA brief history of time\tStephen W Hawking\tScience',
  'book\tCosmos\tCarl Sagan\tScience',
  'journal\tThe Journal of cell biology\tRockefeller University Press',
  'book\tA brief history of time\tStephen W Hawking\tScience',
];

const tickets = [];

let ticket = 1;

//    watermark :: Document -> Promise Ticket
const watermark = doc => {
  return Promise.resolve(ticket++);
//request({
//  method: 'POST',
//  url: 'http://localhost:8080/ticket',
//  callback: (err, req, text) => {
//    console.log('text:', text);
//  }
//});
};

//    retrieve :: Ticket -> Promise Document
const retrieve = ticket => {
  return Promise.resolve('[Document]');
};

const loop = () => {
  if (docs.length > 0) {
    const doc = docs.shift();
    watermark(doc).then(ticket => {
      tickets.push(ticket);
      console.log('ticket:', ticket);
    });
    setTimeout(loop, 100 * Math.random());
  }
  if (tickets.length > 0) {
    const ticket = tickets[Math.floor(tickets.length * Math.random())];
    retrieve(ticket).then(doc => {
      console.log('doc:', doc);
    });
  }
}
loop();
